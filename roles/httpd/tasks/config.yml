---
- name: yum install packages for apache
  action: yum name={{ item }} state=installed
  with_items:
    - httpd
    - mod_ssl
  tags:
    - httpd

- name: 'make sure selinux tools are present'
  when:
    ansible_os_family == 'RedHat'
  yum:
    name: "{{item}}"
    state: present
  with_items:
    - policycoreutils-python
    - ansible
  tags:
    - apache

- name: 'set selinux flag httpd_can_network_connect'
  seboolean:
    name: httpd_can_network_connect
    state: yes
    persistent: yes
  when: ansible_selinux.status == "enabled"
  notify: 'restart httpd'
  tags:
    - apache


- name: 'create proxy configuration file'
  template:
    src: httpd-conf.d-proxy.conf.j2
    dest: /etc/httpd/conf.d/proxy.conf
    owner: root
    group: root
    mode: 0600
    backup: yes
  notify:
    - restart httpd
  tags:
    - httpd

- name: 'create ssl configuration file'
  template:
    src: httpd-conf.d-ssl.conf.j2
    dest: /etc/httpd/conf.d/ssl.conf
    owner: root
    group: root
    mode: 0600
    backup: yes
  notify:
    - restart httpd
  tags:
    - httpd

- name: 'configure ServerName'
  lineinfile:
    dest: /etc/httpd/conf/httpd.conf
    regexp: '^ServerName '
    line: 'ServerName {{inventory_hostname}}'
    state: present
    insertafter: '^#ServerName'
  tags:
    - httpd

- name: 'mask ServerTokens'
  lineinfile: dest=/etc/httpd/conf/httpd.conf regexp='^ServerTokens '
              line='ServerTokens Prod' state=present
  tags:
    - httpd

- name: 'enable httpd service'
  service:
    name: httpd
    enabled: true
  notify: 'restart httpd'
  tags:
    - httpd

- name: 'start firewalld'
  service:
    name: firewalld
    state: started
  tags:
    - httpd

- name: 'firewalld configure http'
  firewalld:
    service: http
    permanent: true
    state: enabled
    immediate: yes
  tags:
    - httpd

- name: 'firewalld configurate https'
  firewalld:
    service: https
    permanent: true
    state: enabled
    immediate: yes
  tags:
    - httpd
